{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../cart.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/router\";\nfunction CartViewComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8)(1, \"span\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\");\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"currency\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r1.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(5, 2, item_r1.price));\n  }\n}\nexport class CartViewComponent {\n  constructor(cartService, formBuilder) {\n    this.cartService = cartService;\n    this.formBuilder = formBuilder;\n    this.items = this.cartService.getCartItems();\n    this.cartForm = this.formBuilder.group({\n      name: '',\n      address: ''\n    });\n  }\n  onSubmit() {\n    // log things\n    window.alert(JSON.stringify(this.cartForm.value));\n    // reset form fields\n    this.cartForm.reset();\n    // clear cart\n    this.items = this.cartService.clearCart();\n    window.alert(JSON.stringify(this.cartForm.value));\n  }\n  static #_ = this.ɵfac = function CartViewComponent_Factory(t) {\n    return new (t || CartViewComponent)(i0.ɵɵdirectiveInject(i1.CartService), i0.ɵɵdirectiveInject(i2.FormBuilder));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CartViewComponent,\n    selectors: [[\"app-cart-view\"]],\n    decls: 16,\n    vars: 2,\n    consts: [[\"routerLink\", \"/shipping\"], [\"class\", \"cart-item\", 4, \"ngFor\", \"ngForOf\"], [3, \"formGroup\", \"ngSubmit\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"formControlName\", \"name\"], [\"for\", \"address\"], [\"type\", \"text\", \"id\", \"address\", \"formControlName\", \"address\"], [\"type\", \"submit\", 1, \"button\"], [1, \"cart-item\"]],\n    template: function CartViewComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h2\");\n        i0.ɵɵtext(1, \"Cart\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"a\", 0);\n        i0.ɵɵtext(3, \"Check shipping prices\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(4, CartViewComponent_div_4_Template, 6, 4, \"div\", 1);\n        i0.ɵɵelementStart(5, \"form\", 2);\n        i0.ɵɵlistener(\"ngSubmit\", function CartViewComponent_Template_form_ngSubmit_5_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(6, \"div\")(7, \"label\", 3);\n        i0.ɵɵtext(8, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"input\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\")(11, \"label\", 5);\n        i0.ɵɵtext(12, \"Address\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"button\", 7);\n        i0.ɵɵtext(15, \"Purchase\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.items);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.cartForm);\n      }\n    },\n    dependencies: [i3.NgForOf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName, i4.RouterLink, i3.CurrencyPipe],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","item_r1","name","ɵɵpipeBind1","price","CartViewComponent","constructor","cartService","formBuilder","items","getCartItems","cartForm","group","address","onSubmit","window","alert","JSON","stringify","value","reset","clearCart","_","ɵɵdirectiveInject","i1","CartService","i2","FormBuilder","_2","selectors","decls","vars","consts","template","CartViewComponent_Template","rf","ctx","ɵɵtemplate","CartViewComponent_div_4_Template","ɵɵlistener","CartViewComponent_Template_form_ngSubmit_5_listener","ɵɵelement","ɵɵproperty"],"sources":["/Users/arpit.jain/personal/angular-getting-started/src/app/cart-view/cart-view.component.ts","/Users/arpit.jain/personal/angular-getting-started/src/app/cart-view/cart-view.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { CartService } from '../cart.service';\n\n@Component({\n  selector: 'app-cart-view',\n  templateUrl: './cart-view.component.html',\n  styleUrls: ['./cart-view.component.css']\n})\nexport class CartViewComponent {\n  items = this.cartService.getCartItems();\n\n  cartForm = this.formBuilder.group({\n    name: '',\n    address: '',\n  })\n\n  constructor(\n    private cartService: CartService,\n    private formBuilder: FormBuilder,\n  ) {}\n\n  onSubmit() {\n    // log things\n    window.alert(JSON.stringify(this.cartForm.value));\n    // reset form fields\n    this.cartForm.reset();\n    // clear cart\n    this.items = this.cartService.clearCart();\n    window.alert(JSON.stringify(this.cartForm.value));\n  }\n}\n","<h2>Cart</h2>\n\n<a routerLink=\"/shipping\">Check shipping prices</a>\n\n<div class=\"cart-item\" *ngFor=\"let item of items\">\n  <span>{{item.name}}</span>\n  <span>{{item.price | currency}}</span>\n</div>\n\n<form [formGroup]=\"cartForm\" (ngSubmit)=\"onSubmit()\">\n  <!-- name -->\n  <div>\n    <label for=\"name\">Name</label>\n    <input type=\"text\" id=\"name\" formControlName=\"name\">\n  </div>\n\n   <!-- addreses -->\n   <div>\n    <label for=\"address\">Address</label>\n    <input type=\"text\" id=\"address\" formControlName=\"address\">\n  </div>\n\n  <!-- submit button -->\n  <button class=\"button\" type=\"submit\">Purchase</button>\n</form>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}